lex import {
    obj i8
    obj i16
    obj i32
    obj i64
}

lex main : import

fn main() {
    obj NULL
    obj BH = boothash

#    obj I8 = obj(i8)
    obj I8 = newtype NULL, 'P6int'
    do {
        obj info = create BH
        obj subinfo = create BH
        obj bits = obj(8)
        bindkey info, 'integer', subinfo
        bindkey subinfo, 'bits', bits
        composetype I8, info
    }

    obj BUF = newtype NULL, 'VMArray'
    do {
        obj info = create BH
        obj subinfo = create BH
        bindkey info, 'array', subinfo
        bindkey subinfo, 'type', I8
        composetype BUF, info
    }

    obj fh = open 'lib/primitives.moarvm', 'r'
    obj buf = create BUF
    read fh, buf, 8
    close fh

    say 'ok'
    exit 0
}

fn import() {
    loadbytecode 'lib/primitives.moarvm'
    obj primitives = getcurhllsym 'primitives'

    obj I8 = getlexrel primitives, 'i8'
    bindlex i8, I8

    obj mainfn = getcode main
    obj context = ctx
    forceouterctx mainfn, context
    main()
}
